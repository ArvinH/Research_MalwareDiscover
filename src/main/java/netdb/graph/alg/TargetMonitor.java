package netdb.graph.alg;

import java.util.ArrayList;

import netdb.database.opt.DatabaseOpts;
import netdb.graph.opts.framework.OptsExperimentSet;
import netdb.graph.unit.CacheManager;

import com.tinkerpop.blueprints.Vertex;

public class TargetMonitor {
	private CacheManager blockCache = null;
	
	public TargetMonitor(CacheManager blockCache){
		this.blockCache = blockCache;
	}
	public void monitor(){
		Vertex target = null;
		String targetID = null;
		ArrayList<String> targetCount = null;
		String targetCount_str = null;
		for(int i = 0; i < OptsExperimentSet.TARGET_LIST.length; i++){
			target = this.blockCache.findVertexInCache(OptsExperimentSet.TARGET_LIST[i]);
			if(target == null){
				System.out.println(OptsExperimentSet.TARGET_LIST[i]+" not found");
			}
			targetID = target.getProperty("nodeID");
			
			if(String.class.isAssignableFrom(target.getProperty("count").getClass())){
				targetCount_str = target.getProperty("count");
				System.out.println("Target "+targetID+" count is "+targetCount_str);
			}
			else{
				targetCount = target.getProperty("count");
				System.out.println("Target "+targetID);
				for(String index : targetCount){
					System.out.println(index);
				}
			}
		}
	}
	
}
