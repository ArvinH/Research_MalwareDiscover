package netdb.graph.opts.framework;

import java.util.Date;

import netdb.graph.unit.Cacheable;
import netdb.graph.unit.ShutdownHook;

import org.neo4j.graphdb.GraphDatabaseService;

import com.tinkerpop.blueprints.impls.neo4j.Neo4jGraph;

public class GBlock implements Comparable<GBlock>, Cacheable {
  /**
   * blueprint graph
   */
	public static final int MEMORY_GBLOCK = 0;
	public static final int DISK_GBLOCK = 1;
	
	private Neo4jGraph graph;
	private String id;
	private int b_type = -1;

    Date leastAccessTime = new Date();
    
    public GBlock(Neo4jGraph graph, String BorderID){
    	
    	this.graph = graph;
    	this.id = BorderID;
    	registerShutdownHook(this.graph);
    	
    }
    public void registerShutdownHook(Neo4jGraph graph){
    	ShutdownHook.registerShutdownHook(graph);
    }

	public boolean isExpired() {
		// TODO Auto-generated method stub
		return false;
	}

	public String getIdentifier() {
		// TODO Auto-generated method stub
		return this.id;
	}
	public Neo4jGraph getGraph(){
		return this.graph;
	}
	
	public void shutdownGB(){
		this.graph.shutdown();
	}


	@Override
	public int compareTo(GBlock o) {
		// TODO Auto-generated method stub
		return 0;
	}


}
