package netdb.graph.alg;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Random;

import com.tinkerpop.blueprints.Edge;

public class RandomProb {
	HashMap<Edge, Double> edgeProb;
	public RandomProb(){
		edgeProb = new HashMap<Edge, Double>();
	}
	public Edge calculate(double sumOfweightingValue, HashMap<Edge, Double> weight){
		Random r = new Random();
		double randomValue = 0 + (sumOfweightingValue - 0) * r.nextDouble();
		Edge tempEdge;
		Iterator<Edge> edgePtr = weight.keySet().iterator();
		while(edgePtr.hasNext()){
			tempEdge = edgePtr.next();
			if(randomValue < (weight.get(tempEdge)/sumOfweightingValue)){
				return tempEdge;
			}
		}
		return null;
	}
	public double probToTarget(double sumOfweightingValue, Edge targetEdge){
		double targetWeight = targetEdge.getProperty("weight");
		
		return (targetWeight/sumOfweightingValue);
	}
}
