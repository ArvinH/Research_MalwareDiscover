package netdb.graph.alg;

import java.util.ArrayList;
import java.util.Iterator;

import netdb.graph.opts.framework.OptsExperimentSet;
import netdb.graph.unit.CacheManager;

import com.tinkerpop.blueprints.Vertex;
import com.tinkerpop.blueprints.impls.neo4j.Neo4jGraph;

public class TargetMonitor {
	private CacheManager blockCache = null;
	private Neo4jGraph indexedGraph = null;
	public TargetMonitor(Neo4jGraph indexedGraph){
		this.indexedGraph = indexedGraph;
	}
	public TargetMonitor(CacheManager blockCache){
		this.blockCache = blockCache;
	}
	public void monitorForbfs(){
		Vertex target = null;
		String targetID = null;
		ArrayList<String> targetCount = null;
		String targetCount_str = null;
		for(int i = 0; i < OptsExperimentSet.TARGET_LIST.length; i++){
			Iterator<Vertex> tempVertex = this.indexedGraph.getVertices("nodeID", OptsExperimentSet.TARGET_LIST[i]).iterator();
			while(tempVertex.hasNext()){
				target = tempVertex.next();
			}
			if(target == null){
				System.out.println(OptsExperimentSet.TARGET_LIST[i]+" not found");
			}
			targetID = target.getProperty("nodeID");
			
			if(String.class.isAssignableFrom(target.getProperty("count").getClass())){
				targetCount_str = target.getProperty("count");
				System.out.println("Target"+targetID+" count is "+targetCount_str);
			}
			else{
				targetCount = target.getProperty("count");
				System.out.println("Target "+targetID);
				for(String index : targetCount){
					System.out.print(index+",");
				}
				System.out.println();
			}			
		}
		
	}
	public void monitor(){
		Vertex target = null;
		String targetID = null;
		ArrayList<String> targetCount = null;
		String targetCount_str = null;
		for(int i = 0; i < OptsExperimentSet.TARGET_LIST.length; i++){
			target = this.blockCache.findVertexInCache(OptsExperimentSet.TARGET_LIST[i]);
			if(target == null){
				System.out.println(OptsExperimentSet.TARGET_LIST[i]+" not found");
			}
			targetID = target.getProperty("nodeID");
			
			if(String.class.isAssignableFrom(target.getProperty("count").getClass())){
				targetCount_str = target.getProperty("count");
				System.out.println("Target "+targetID+" count is "+targetCount_str);
			}
			else{
				targetCount = target.getProperty("count");
				System.out.println("Target "+targetID);
				for(String index : targetCount){
					System.out.println(index);
				}
			}
		}
	}
	
}
