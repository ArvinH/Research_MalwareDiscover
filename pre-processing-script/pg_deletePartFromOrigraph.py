'''
@author ArvinH
@date 2014/3/16
'''
import sys
import postgresql
import os


class disk_deletePartFromOriGraph:
   def __init__(self):
      self.tempNodeSet = set()

   def deleteSingle(self, partFilepath, targetID):
      db = postgresql.open(user = 'netdb', password = 'netdb',host = '192.168.66.42', database = 'mrGraph4', port = 5432)

      deleteDB = db.prepare('update neighborMap set valid = $2 where nodeID = $1')
      with db.xact():
        deleteDB(targetID,'1')

      os.system('rm '+'../batch-import/ResearchRealData/mini_Real/mini_edge/'+partFilepath)
      os.system('rm '+'../batch-import/ResearchRealData/mini_Real/mini_node/'+partFilepath+'.node')

   def delete(self, partFilepath):
      db = postgresql.open(user = 'netdb', password = 'netdb',host = '192.168.66.42', database = 'mrGraph4', port = 5432)

      with open('../batch-import/ResearchRealData/mini_Real/mini_edge/'+partFilepath, 'r', encoding='utf-8') as partFile:
         for line in partFile:
            data = line.strip().split('\t')

            deleteDB = db.prepare('update neighborMap set valid = $2 where nodeID = $1')
            with db.xact():
              deleteDB(data[0],'1')

            get_neighbor = db.prepare('select neighbor from neighborMap where nodeID = $1')
            with db.xact():
              result = get_neighbor(data[1])
              if len(result) > 0:
                 neighbors = result[0][0].split(',')
                 for neighbor in neighbors:
                    if neighbor == data[0]:
                       neighbors.remove(data[0])
                 newNeighbors = ','.join(neighbors)
                 update_neighbor = db.prepare('update neighborMap set neighbor = $1 where nodeID = $2')
                 with db.xact():
                   update_neighbor(newNeighbors, data[1])



def main():
   partFilepath = sys.argv[1]
   oriGraphpath = sys.argv[2]
   newGraphpath = sys.argv[3]
   f = disk_deletePartFromOriGraph()
   f.delete(partFilepath, oriGraphpath, newGraphpath)
if __name__ == '__main__':
    main()
