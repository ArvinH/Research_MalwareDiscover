package netdb.graph.opts.framework;

import java.util.List;

import netdb.graph.alg.IGraphSearchStrategy;
import netdb.graph.unit.CacheManager;

import com.tinkerpop.blueprints.Vertex;
import com.tinkerpop.blueprints.impls.neo4j.Neo4jGraph;

public class IndexedGraph {
  private CacheManager blockCache = null;
  private Vertex root=null;
  private Neo4jGraph indexedGraph;
  
  public IndexedGraph(String defaultGraph){
	 blockCache = new CacheManager();
	 indexedGraph = new Neo4jGraph(defaultGraph);
  }
  public Walker query(IGraphSearchStrategy queryStratgey, String queryNode) {
	  Walker walker = new Walker();
	  GBlock gBlock = new GBlock(indexedGraph);
	  blockCache.putCache(gBlock);
	  root = indexedGraph.getVertex(queryNode);
	  List<Vertex> nextV = queryStratgey.getNextVisitVertex(root, walker);

	  while (null != nextV) {
		  /**
		   * do something
		   */
		  nextV = queryStratgey.getNextVisitVertex(nextV.get(0), walker);
	  }
	  
	  return walker;
  }
}
