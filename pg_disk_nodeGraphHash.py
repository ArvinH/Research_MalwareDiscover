'''
@author ArvinH
@date 2014/04/07

'''
import sys
import random
import pg_deletePartFromOrigraph
import postgresql
import os


class buildHash:

   def build(self,nodefile,partID):

        db = postgresql.open(user = 'netdb', password = 'netdb',host = '192.168.66.42', database = 'mrGraph4', port = 5432)
        SQL = db.prepare('select partID from nodeGraphHash where nodeID = $1')
        update_nodeHash = db.prepare('update nodeGraphHash set partID = $2 where nodeID = $1')
        insert_border = db.prepare('insert into nodeGraphHash values($1,$2)')
        with open(nodefile, 'r', encoding='utf-8') as nodes:
            for line in nodes:
              data = line.strip().split('\t')
              if(data[0] != 'nodeID:string:Nodes'):
                 result = SQL(data[0])
                 if len(result) > 0:
                    temp = ''.join(result[0])
                    newResult = temp+','+partID
                    #update
                    with db.xact():
                      update_nodeHash(data[0],newResult)
                 else:
                    #insert
                    newResult = partID
                    with db.xact():
                      insert_border(data[0], newResult)

def main ():

    f = buildHash()
    dirs = os.listdir('/home/arvin/Dropbox/Research/GTgraph-master/R-MAT/processRealDataProgram/RealData/mini_node/')
    for files in dirs:
       if '.node' in files:
          partID = files.split('_')
          f.build('/home/arvin/Dropbox/Research/GTgraph-master/R-MAT/processRealDataProgram/RealData/mini_node/'+files,partID[0])




if __name__ == '__main__' :
    main()
