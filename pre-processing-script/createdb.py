import subprocess

# Start Server
subprocess.call('pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start', shell=True)

# Create Database
try:
    createdb_output = subprocess.check_output('createdb mrGraph4', shell=True)
except:
    print ('Database mrGraph4 is exist!!')
else:
    print ('Create Database mrGraph4')

# Create Role
createuser_proc = subprocess.Popen('psql mrGraph4', shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE)
createuser_proc.stdin.write(b"CREATE USER netdb WITH UNENCRYPTED PASSWORD 'netdb';\n")
createuser_proc.stdin.write(b"\q\n")
createuser_proc.communicate()

# Create neighbormap
create_neighbor_proc = subprocess.Popen('psql mrGraph4', shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE)
create_neighbor_proc.stdin.write(b"CREATE TABLE neighbormap\
                                   (\
                                    nodeid text NOT NULL,\
                                    neighbor text,\
                                    valid character varying(1),\
                                    depth smallint,\
                                    partid text,\
                                    parent text,\
                                    CONSTRAINT neighbormap_pkey PRIMARY KEY (nodeid)\
                                   )\
                                   WITH (\
                                    OIDS=FALSE\
                                   );\n"
                                )
create_neighbor_proc.stdin.write(b"GRANT ALL ON TABLE neighbormap TO netdb;\n")
create_neighbor_proc.stdin.write(b"\q\n")
create_neighbor_proc.communicate()

# Create bordermap
create_bordermap_proc = subprocess.Popen('psql mrGraph4', shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE)
create_bordermap_proc.stdin.write(b"CREATE TABLE bordermap\
                                    (\
                                    borderid text NOT NULL,\
                                    neighbor text,\
                                    subgraphid text,\
                                    CONSTRAINT bordermap_pkey PRIMARY KEY (borderid)\
                                    )\
                                    WITH (\
                                        OIDS=FALSE\
                                    );\n"
                                 )
create_bordermap_proc.stdin.write(b"GRANT ALL ON TABLE bordermap TO netdb;\n")
create_bordermap_proc.stdin.write(b"\q\n")
create_bordermap_proc.communicate()

# Create nodegraphhash
create_nodegraphhash_proc = subprocess.Popen('psql mrGraph4', shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE)
create_nodegraphhash_proc.stdin.write(b"CREATE TABLE nodegraphhash\
                                        (\
                                        nodeid text NOT NULL,\
                                        depth smallint,\
                                        partid text,\
                                        CONSTRAINT nodegraphhash_pkey PRIMARY KEY (nodeid)\
                                        )\
                                        WITH (\
                                            OIDS=FALSE\
                                        );\n"
                                     )
create_nodegraphhash_proc.stdin.write(b"GRANT ALL ON TABLE nodegraphhash TO netdb;\n")
create_nodegraphhash_proc.stdin.write(b"\q\n")
create_nodegraphhash_proc.communicate()
