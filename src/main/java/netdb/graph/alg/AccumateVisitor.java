package netdb.graph.alg;

import java.util.ArrayList;
import java.util.Iterator;

import netdb.graph.opts.framework.TargetVertex;
import netdb.graph.opts.framework.Walker;

import com.tinkerpop.blueprints.Edge;
import com.tinkerpop.blueprints.Vertex;
/**
 * 
 * @author arvin
 * first:
 * this visitor is used to insert all visited Vertex and edges into walker, 
 * and also used to update the weight on the whole path that walker pass by.
 * 
 * Second:
 * check the vertex it visited is target or not
 */
public class AccumateVisitor implements IGraphSearchVisitor {
    private boolean targetOrNot;
    private ArrayList<TargetVertex> targetList;
    private WeightingFunction weightingFunction;
    private BoundaryProcessor boundaryProcessor;
    
    /**
     * 
     * @param targetList: List of target
     * @param threshold: threshold for BoundaryProcessor
     */
    public AccumateVisitor(ArrayList<TargetVertex> targetList, double threshold){
    	this.targetList = targetList;
    	this.targetOrNot = false;
    	this.weightingFunction = new WeightingFunction();
    	this.boundaryProcessor = new BoundaryProcessor(threshold);
    }
    
	public boolean visitVertex(Vertex v,Edge impactedEdge, Walker walker) {
		/**
		 * check the v is the target or not
		 */
		this.targetOrNot = targetCompare(v,this.targetList);
		//if v is not root
		if(impactedEdge != null){
			walker.addNode(v,this.targetOrNot);
			walker.addEdge(impactedEdge);

		}// if v is root
		else if (impactedEdge == null){
			walker.addNode(v,this.targetOrNot);
		}
		
		//if found target, update the whole path
		if(this.targetOrNot){
			this.weightingFunction.update(walker);
		}
			
			
			return this.targetOrNot;

		
	}
	
	public void setTargetOrNotFlag(boolean flag){
		this.targetOrNot = flag;
	}
	
	public boolean targetCompare(Vertex v, ArrayList<TargetVertex> t){
	  	boolean compareResult = false;
	  	Iterator<TargetVertex> targetPtr = t.iterator();
	  	while(targetPtr.hasNext()){
	  		String targetType = (String)targetPtr.next().getProperty("type");
	  		if (targetType.equals(v.getProperty("type"))){
	  			compareResult = true;
	  		}
	  	} 	
	  	
	  return compareResult; 
  }
	


}
